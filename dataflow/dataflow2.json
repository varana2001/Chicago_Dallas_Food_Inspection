{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "newdallas",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "surrogateKey2"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RecordID as string,",
				"          {Restaurant Name} as string,",
				"          {Inspection Type} as string,",
				"          {Inspection Date} as string,",
				"          {Inspection Score} as string,",
				"          {Street Number} as string,",
				"          {Street Name} as string,",
				"          {Street Direction} as string,",
				"          {Street Type} as string,",
				"          {Street Unit} as string,",
				"          {Street Address} as string,",
				"          {Zip Code} as string,",
				"          {Inspection Month} as string,",
				"          {Inspection Year} as string,",
				"          {Lat Long Location} as string,",
				"          Clean_Restaurant_Name as string,",
				"          IsCoordinateRow as string,",
				"          LatLongLocation as string,",
				"          Name as string,",
				"          Value as string,",
				"          CLEAN as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          ID as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT(MAX(BUISNESS_ID)) AS ID\\nFROM DIM_BUISNESS',",
				"     format: 'query') ~> source2",
				"source1 select(mapColumn(",
				"          Clean_Restaurant_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select2 keyGenerate(output(License_no as long),",
				"     startAt: 9876546L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"select1 aggregate(groupBy(Clean_Restaurant_Name),",
				"     name = first(Clean_Restaurant_Name)) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"surrogateKey1, source2 join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 keyGenerate(output(ROWID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"surrogateKey2 derive(ID = ID+ROWID) ~> derivedColumn1"
			]
		}
	}
}