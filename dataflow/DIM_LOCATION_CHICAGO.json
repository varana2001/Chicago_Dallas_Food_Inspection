{
	"name": "DIM_LOCATION_CHICAGO",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LOC_DALLAS_DIM_ST",
						"type": "DatasetReference"
					},
					"name": "ChicagoSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select3"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ROWID as decimal(38,0),",
				"          INSPECTION_ID as string,",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          LICENSE_NUMBER as decimal(38,0),",
				"          FACILITY_TYPE as string,",
				"          RISK as string,",
				"          ADDRESS as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          ZIP as decimal(38,0),",
				"          INSPECTION_DATE as string,",
				"          INSPECTION_TYPE as string,",
				"          RESULTS as string,",
				"          VIOLATIONS as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          VIOLATION_CODE as decimal(38,0),",
				"          VIOLATION_DESC as string,",
				"          COMMENTS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ChicagoSource",
				"ChicagoSource select(mapColumn(",
				"          ADDRESS,",
				"          CITY,",
				"          STATE,",
				"          ZIP,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          LOCATION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(LATITUDE = iif(isNull(LATITUDE), 'None', LATITUDE),",
				"          LONGITUDE = iif(isNull(LONGITUDE), 'None', LONGITUDE),",
				"          LOCATION = iif(isNull(LOCATION), 'None', LOCATION),",
				"          splitAddress = split(ADDRESS, ' ')) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          ADDRESS,",
				"          CITY,",
				"          STATE,",
				"          ZIP,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          LOCATION,",
				"          splitAddress",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(STREET_NUMBER = splitAddress[1],",
				"          STREET_NAME = toString(",
				"    join(",
				"        slice(",
				"            splitAddress,",
				"            3,",
				"            length(splitAddress) - iif(contains(splitAddress[length(splitAddress)], '('), 3, 2)",
				"        ),",
				"        ' '",
				"    )",
				")",
				",",
				"          STREET_TYPE = ERROR_FUNCTION(''),",
				"          STREET_DIRECTION = splitAddress[2],",
				"          STREET_UNIT = ERROR_FUNCTION(''),",
				"          ADDRESS_LENGTH = toInteger(length(splitAddress))) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          ADDRESS,",
				"          CITY,",
				"          STATE,",
				"          ZIP,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          LOCATION,",
				"          STREET_NUMBER,",
				"          STREET_NAME,",
				"          STREET_TYPE,",
				"          STREET_DIRECTION,",
				"          STREET_UNIT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 keyGenerate(output({undefined} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1"
			]
		}
	}
}