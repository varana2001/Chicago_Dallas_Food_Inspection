{
	"name": "DIM_RISK_CHICAGO",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BUSIDIM",
						"type": "DatasetReference"
					},
					"name": "CHICAGOSOURCE"
				},
				{
					"dataset": {
						"referenceName": "CHICAGOSTAGESF",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BUISNESS_ID as decimal(38,0),",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          LICENSE_NUMBER as decimal(38,0),",
				"          FACILITY_TYPE as string,",
				"          SOURCE_CITY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CHICAGOSOURCE",
				"source(output(",
				"          ROWID as decimal(38,0),",
				"          INSPECTION_ID as string,",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          LICENSE_NUMBER as decimal(38,0),",
				"          FACILITY_TYPE as string,",
				"          RISK as string,",
				"          ADDRESS as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          ZIP as decimal(38,0),",
				"          INSPECTION_DATE as string,",
				"          INSPECTION_TYPE as string,",
				"          RESULTS as string,",
				"          VIOLATIONS as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          VIOLATION_CODE as decimal(38,0),",
				"          VIOLATION_DESC as string,",
				"          COMMENTS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"join1 select(mapColumn(",
				"          RISK_DESC = RISK,",
				"          LICENSE_NUMBER = CHICAGOSOURCE@LICENSE_NUMBER",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"aggregate1 keyGenerate(output(RISK_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"select1 aggregate(groupBy(RISK_DESC,",
				"          LICENSE_NUMBER),",
				"     RISK = first(RISK_DESC)) ~> aggregate1",
				"CHICAGOSOURCE, source1 join(CHICAGOSOURCE@LICENSE_NUMBER == source1@LICENSE_NUMBER,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"surrogateKey1 derive(RISK = iif(isNull(RISK), \"None\", RISK)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          RISK_ID as decimal(38,0),",
				"          RISK_DESC as string,",
				"          LICENSE_NUMBER as decimal(15,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          RISK_ID,",
				"          RISK_DESC = RISK,",
				"          LICENSE_NUMBER",
				"     )) ~> sink1"
			]
		}
	}
}